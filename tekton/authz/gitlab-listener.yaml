apiVersion: v1
kind: Secret
metadata:
  name: gitlab-secret
type: Opaque
stringData:
  secretToken: "1234567"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: authz-builder-sa
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: authz-gitlab-listener
spec:
  serviceAccountName: authz-builder-sa
  triggers:
    - name: rego-build-trigger
      interceptors:
        - name: "verify-gitlab-payload"
            ref:
              name: "gitlab"
              kind: ClusterInterceptor
            params:
              - name: secretRef
                value:
                  secretName: "gitlab-secret"
                  secretKey: "secretToken"
              - name: eventTypes
                value:
                  - "Push Hook"
      bindings:
        - name: gitrevision
            value: $(body.checkout_sha)
        - name: gitrepositoryurl
          value: $(body.repository.git_http_url)
      template:
        spec:
          params:
            - name: gitrevision
            - name: gitrepositoryurl
          resourcetemplates:
            - apiVersion: tekton.dev/v1alpha1
              kind: TaskRun
              metadata:
                generateName: gitlab-run-
              spec:
                taskSpec:
                  inputs:
                    resources:
                      - name: source
                        type: git
                  volumes:
                    - name: kaniko-secret
                      secret:
                        secretName: dockerhub-credential
                        items:
                          - key: .dockerconfigjson
                            path: config.json
                    steps:
                      - name: build-source
                        image: yerinu2019/opa-gsutil:latest
                        script: |
                          #!/usr/bin/env bash
                          set -xe
                          cd $(inputs.resources.source.path)
                          cd simulation/single-cluster/minikube/policy/rego
                          pwd
                          ls -al
                          opa build -b -o authz-bundle.tar.gz .
                          echo "upload"
                          gsutil cp -p authz-bundle.tar.gz gs://test-opa-policy-bundles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: authz-eventlistener-binding
subjects:
  - kind: ServiceAccount
    name: authz-builder-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: authz-eventlistener-clusterbinding
subjects:
  - kind: ServiceAccount
    name: authz-builder-sa
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: el-gitlab-listener-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /authz
            pathType: Prefix
            backend:
              service:
                name: authz-gitlab-listener
                port:
                  number: 8080